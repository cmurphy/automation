def test_results = ''
def staging_project = ''
def test_project = ''
def changes_to_test = ''
pipeline {
    agent any
    stages {
        stage('Creating test package from change') {
            when {
                anyOf {
                    expression { params.github_pr != '' }
                    /* submitrequest id
                    expression { }
                    */
                }
            }
            agent {
                label "openstack-trackupstream"
            }
            steps {
                script {
                    test_project = sh(returnStdout: true, script: 'jenkins/ci.suse.de/select-project.sh').trim()
                    sh "jenkins/ci.suse.de/update-package.sh ${test_project}"
                }
            }
        }
        stage('Updating staging repository') {
            when {
                allOf {
                    expression { params.github_pr == null }
                    /* submitrequest id
                    expresssion { }
                    */
                }
            }
            agent {
                label "openstack-trackupstream"
            }
            steps {
                script {
                    staging_project = sh(returnStdout: true, script: 'jenkins/ci.suse.de/select-project.sh').trim()
                    changes_to_test = sh(returnStdout: true, script: 'jenkins/ci.suse.de/update-packages.sh').trim()
                }
            }
        }
        stage('Running tests') {
            when {
                anyOf {
                    expression { return changes_to_test =~ 'found changes to test' }
                    expression { return params.github_pr != null }
                }
            }
            agent {
                label "cloud-ardana-ci"
            }
            steps {
                echo "Setting up test nodes"
                echo "Using Cloud repo: ${staging_project}"
                //sh "jenkins/ci.suse.de/setup-nodes.sh"
                script {
                    if(params.emit_success){
                        test_results = 'success'
                    } else {
                        test_results = 'failure'
                        sh 'exit 1'
                    }
                }
            }
        }
        stage('Report results') {
            agent {
                label "cloud-trigger"
            }
            when {
                expression { return params.github_pr != null }
            }
            steps {
                sh "jenkins/ci.suse.de/report-pr.sh ${test_results}"
            }
        }
        stage('Accept changes') {
            when {
                allOf {
                    expression { return staging_project != '' }
                    expression { return env.github_pr == null }
                    /* submitrequest id
                    expression { }
                    */
                }
            }
            agent {
                label "openstack-trackupstream"
            }
            steps {
                sh "jenkins/ci.suse.de/submit-packages.sh ${staging_project}"
            }
        }
    }
}
