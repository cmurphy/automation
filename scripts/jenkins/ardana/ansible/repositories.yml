---
- name: Setup repositories on the deployer node
  hosts: hosts
  gather_facts: False

  vars:
    clouddata_server: provo-clouddata.cloud.suse.de
    download_suse_server: download.suse.de
    cloudsource: SUSE-OpenStack-Cloud-8-devel-staging
    arch: x86_64
    repos_url: "http://{{ clouddata_server }}/repos/{{ arch }}"
    cloudsource_url: "{{ repos_url }}/{{ cloudsource }}"
    sshpass_repo: "http://download.suse.de/ibs/QA:/SLE12SP3/update/"

  tasks:
  - name: Check srv directories
    stat:
      path: "/srv/www/suse-12.3/x86_64/repos/{{ item }}"
    register: srv_dir_stats
    with_items:
      - Cloud
      - SLES12-SP3-Pool
      - SLES12-SP3-Updates
      - SUSE-OpenStack-Cloud-8-Pool
      - SUSE-OpenStack-Cloud-8-Updates

  - name: Create srv directories
    file:
      state: directory
      path: "/srv/www/suse-12.3/x86_64/repos/{{ item.item }}"
      mode: 0755
    when: not item.stat.exists
    with_items:
      - "{{ srv_dir_stats.results }}"

  - name: Mount zypper repos
    mount:
      state: mounted
      fstype: nfs
      opts: ro,nosuid,rsize=8192,wsize=8192,hard,intr,nolock
      name: /srv/www/suse-12.3/x86_64/repos/{{ item.name }}
      src: "{{ clouddata_server }}:/srv/nfs/repos/x86_64/{{ item.src }}"
    with_items:
      # Use a consistent name for the Cloud media install repo so that we
      # don't have to account for development versus production repos in the
      # playbooks
      - name: Cloud
        src: "{{ cloudsource }}"
      - name: SLES12-SP3-Pool
        src: SLES12-SP3-Pool
      - name: SLES12-SP3-Updates
        src:  SLES12-SP3-Updates
        #TODO Add these only if not develcloud media is used
        # - name: SUSE-OpenStack-Cloud-8-Pool
        # src: SUSE-OpenStack-Cloud-8-Pool
        # - name: SUSE-OpenStack-Cloud-8-Updates
        # src: SUSE-OpenStack-Cloud-8-Updates

  - name: Add SLES repos
    zypper_repository:
      repo: "/srv/www/suse-12.3/x86_64/repos/{{ item }}"
      name: "{{ item }}"
    with_items:
      - SLES12-SP3-Pool
      - SLES12-SP3-Updates
        #TODO Add these only if not develcloud media is used
        # - SUSE-OpenStack-Cloud-8-Pool
        # - SUSE-OpenStack-Cloud-8-Updates

  # Need to add Cloud repo as repo-md not as the default "yast2" type as that
  # one refuses to install packages if the media build number changes
  - name: Add Cloud repo
    shell: |
      zypper -n lr Cloud || zypper -n ar -c -K -f -t rpm-md /srv/www/suse-12.3/x86_64/repos/Cloud Cloud

  - name: Repo for sshpass
    zypper_repository:
      repo: "{{ sshpass_repo }}"
      name: sshpass

  # Refresh all repos
  - name: Refresh zypper repositories
    zypper_repository:
      repo: '*'
      auto_import_keys: yes
      runrefresh: yes

  - name: Install sshpass
    zypper:
      name: 'sshpass'
      state: present

  - name: Remove Repo for sshpass
    zypper_repository:
      repo: "{{ sshpass_repo }}"
      name: sshpass
      state: absent

  - name: Install SMT stuff
    zypper:
      name: "{{ item }}"
      state: latest
    with_items:
      - yast2-smt
      - smt
      - SuSEfirewall2

  - name: Install/Update ardana pattern
    zypper:
      name: "patterns-cloud-ardana"
      state: latest

  # This can't happen earlier because we rely on the ardana pattern for creating
  # the ardana user/group
  - name: Ensure /etc/ardana exists
    file:
      path: /etc/ardana
      state: directory
      owner: ardana
      group: ardana

  - name: Capture build number of cloudsource media
    get_url:
      url: "{{ cloudsource_url }}/media.1/build"
      dest: /etc/ardana/media-build-version

  - name: Add build information to /etc/motd
    shell: |
      media_build_version=$(cat /etc/ardana/media-build-version)
      echo "Build job:  {{ build_url }}" >>/etc/motd
      echo "Built from: {{ cloudsource_url }}" >>/etc/motd
      echo "Media build version: $media_build_version" >>/etc/motd
